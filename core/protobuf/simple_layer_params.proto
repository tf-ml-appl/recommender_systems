/* Copyright 2016 The TensorFlow Authors. All Rights Reserved.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
==============================================================================*/

syntax = 'proto3';

package recommender_systems;

option cc_enable_arenas = true;
option java_outer_classname = "ClusterProtos";
option java_multiple_files = true;
option java_package = "org.tensorflow.distruntime";
option go_package = "github.com/tensorflow/tensorflow/tensorflow/go/core/protobuf/for_core_protos_go_proto";

message Conv1DParams {
    optional int32 filters = 1;
    optional int32 kernel_size = 2;
    optional string padding = 3;
    optional string data_format = 4;
    optional float dilation_rate = 5;
    optional int32 groups = 6;
    optional string activation = 7;
    optional bool use_bias = 8;
    optional string kernel_initializer = 9;
    optional string bias_initializer = 10;
    optional string activity_regularizer = 11;
    optional string kernel_constraint = 12;
    optional string bias_constraint = 13;
}

message DenseParams {
    optional int32 units = 1;
    optional string activiation = 2;
    optional bool use_bias = 3;
    optional string kernel_initializer = 4;
    optional string bias_initializer = 5;
    optional string kernel_regularizer = 6;
    optional string bias_regularizer = 7;
    optional string activity_regularizer = 8;
    optional string kernel_constraint = 9;
    optional string bias_constraint = 10;
}

message BatchNormParams {
    optional int32 axis = 1;
    optional float momentum = 2;
    optional float epsilon = 3;
    optional float scale = 4;
    optional string beta_initializer = 5;
    optional string gamma_initializer = 6;
    optional string moving_mean_initializer = 7;
    optional string beta_regularizer = 8;
    optional string gamma_regularizer = 9;
    optional string beta_constraint = 10;
    optional string gamma_constraint = 11;                                                            
}

message DropOutParams {
    optional float rate = 1;
    optional TensorShapeProto shape = 2;
    optional int32 seed = 3;
}